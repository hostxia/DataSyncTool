<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcceptYear" xml:space="preserve">
    <value>Accepted year</value>
  </data>
  <data name="AgenctCode" xml:space="preserve">
    <value>Agenct code</value>
  </data>
  <data name="ApplicateType" xml:space="preserve">
    <value>Applicate type</value>
  </data>
  <data name="ApplicateWay" xml:space="preserve">
    <value>Applicate way</value>
  </data>
  <data name="AppTypePersonal" xml:space="preserve">
    <value>Personal</value>
  </data>
  <data name="AppTypeUnitOrEnterprise" xml:space="preserve">
    <value>Unit/Enterprise</value>
  </data>
  <data name="BussinessType" xml:space="preserve">
    <value>Bussiness type</value>
  </data>
  <data name="ClientCode" xml:space="preserve">
    <value>Client code</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>Copyright</value>
    <comment>版权</comment>
  </data>
  <data name="Domain" xml:space="preserve">
    <value>Domain</value>
    <comment>域名</comment>
  </data>
  <data name="Example" xml:space="preserve">
    <value>Example</value>
  </data>
  <data name="FixedWords" xml:space="preserve">
    <value>Fixed words</value>
  </data>
  <data name="FlowDirection" xml:space="preserve">
    <value>Flow direction</value>
  </data>
  <data name="FlowNumber" xml:space="preserve">
    <value>Flow number</value>
  </data>
  <data name="FollowNotUsed" xml:space="preserve">
    <value>Recycle the numbers formerly discarded, if available.</value>
  </data>
  <data name="FromAgentCode" xml:space="preserve">
    <value>From the agency code management.</value>
  </data>
  <data name="FromBussinessType" xml:space="preserve">
    <value>From the bussiness type management.</value>
  </data>
  <data name="FromClientCode" xml:space="preserve">
    <value>From the client management.</value>
  </data>
  <data name="FromIntroducerCode" xml:space="preserve">
    <value>From the introducer management.</value>
  </data>
  <data name="FromPatentType" xml:space="preserve">
    <value>From the pantent type management.</value>
  </data>
  <data name="FromTrademarkType" xml:space="preserve">
    <value>From the trademark type management.</value>
  </data>
  <data name="IntroducerCode" xml:space="preserve">
    <value>Introducer code</value>
  </data>
  <data name="In_In" xml:space="preserve">
    <value>In-In:</value>
  </data>
  <data name="In_Out" xml:space="preserve">
    <value>In-Out:</value>
  </data>
  <data name="MadridApplicate" xml:space="preserve">
    <value>Madrid applicate</value>
  </data>
  <data name="MaxNumber" xml:space="preserve">
    <value>The maximun plus 1</value>
  </data>
  <data name="NotUse" xml:space="preserve">
    <value>Not use</value>
  </data>
  <data name="Online" xml:space="preserve">
    <value>Online</value>
  </data>
  <data name="OnlyChar" xml:space="preserve">
    <value>You can input one word in each textbox.</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Other</value>
    <comment>其他(类型)</comment>
  </data>
  <data name="Out_In" xml:space="preserve">
    <value>Out-In:</value>
  </data>
  <data name="Out_Out" xml:space="preserve">
    <value>Out-Out:</value>
  </data>
  <data name="Paper" xml:space="preserve">
    <value>Paper</value>
  </data>
  <data name="Patent" xml:space="preserve">
    <value>Patent</value>
    <comment>专利(类型)</comment>
  </data>
  <data name="PatentType" xml:space="preserve">
    <value>Patent type</value>
  </data>
  <data name="RegCountryOrState" xml:space="preserve">
    <value>Reg country or state</value>
  </data>
  <data name="SerialNoIsTooLong" xml:space="preserve">
    <value>The length of serial No. is more 50.</value>
  </data>
  <data name="SingleApplicate" xml:space="preserve">
    <value>Direct applicate</value>
  </data>
  <data name="Trademark" xml:space="preserve">
    <value>Trademark</value>
    <comment>商标(类型)</comment>
  </data>
  <data name="TrademarkType" xml:space="preserve">
    <value>Trademark type</value>
  </data>
  <data name="TypeOfBussinessType" xml:space="preserve">
    <value>Type of bussiness type</value>
  </data>
  <data name="FileClientGov_Client" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="FileClientGov_Officical" xml:space="preserve">
    <value>Auth.</value>
  </data>
  <data name="FileClientGov_Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="FileIOType_Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="FileActive_Active" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="FileActive_NotActive" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="File_NotTransfer" xml:space="preserve">
    <value>Not Forward</value>
  </data>
  <data name="File_Transfered" xml:space="preserve">
    <value>Forwarded</value>
  </data>
  <data name="MadridAgreement" xml:space="preserve">
    <value>MadridAgreement</value>
  </data>
  <data name="MadridProtocol" xml:space="preserve">
    <value>MadridProtocol</value>
  </data>
  <data name="FileIOType_In" xml:space="preserve">
    <value>In File</value>
  </data>
  <data name="FileIOType_Out" xml:space="preserve">
    <value>Out File</value>
  </data>
  <data name="Office" xml:space="preserve">
    <value>&lt;office&gt;</value>
  </data>
  <data name="Dealing" xml:space="preserve">
    <value>Handling</value>
  </data>
  <data name="High" xml:space="preserve">
    <value>High</value>
  </data>
  <data name="Low" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="Middle" xml:space="preserve">
    <value>Middle</value>
  </data>
  <data name="TaskFinish" xml:space="preserve">
    <value>Finished</value>
  </data>
  <data name="TaskInvalid" xml:space="preserve">
    <value>Discarded</value>
  </data>
  <data name="Undeal" xml:space="preserve">
    <value>UnHandled</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close case</value>
  </data>
  <data name="UnClose" xml:space="preserve">
    <value>UnClosed</value>
  </data>
  <data name="Color_Config_Before_1" xml:space="preserve">
    <value>Days before due date:</value>
  </data>
  <data name="Color_Config_Before_2" xml:space="preserve">
    <value />
  </data>
  <data name="Color_Config_Be_Due" xml:space="preserve">
    <value>Be due</value>
  </data>
  <data name="Color_Config_Overdue" xml:space="preserve">
    <value>Overdue</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value>Agent Fee Discount</value>
  </data>
  <data name="Agent_Fee_Discount" xml:space="preserve">
    <value>Agent Fee Discount({0}%)</value>
  </data>
  <data name="Fixed_AFee" xml:space="preserve">
    <value>Fixed Agent Fee({0})</value>
  </data>
  <data name="Fixed_Total_Fee" xml:space="preserve">
    <value>Fixed Total Fee({0})</value>
  </data>
  <data name="Column_Text_Charge_First" xml:space="preserve">
    <value>Charging after handling</value>
  </data>
  <data name="Column_Text_Client" xml:space="preserve">
    <value>The client pays O.fee,we only notify the client</value>
  </data>
  <data name="Column_Text_Pay_First" xml:space="preserve">
    <value>Charging before handling</value>
  </data>
  <data name="RadioGroup_3_Text" xml:space="preserve">
    <value> of the days past</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Week" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="AnnualFee" xml:space="preserve">
    <value>Annual Fee</value>
  </data>
  <data name="DomainRenewalFee" xml:space="preserve">
    <value>Domain Renewal Fee</value>
  </data>
  <data name="TrademarkRenewalFee" xml:space="preserve">
    <value>Trademark Renewal Fee</value>
  </data>
  <data name="CaseDemand" xml:space="preserve">
    <value>Case</value>
  </data>
  <data name="ApplicationDemand" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="ClientDemand" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="AgencyDemand" xml:space="preserve">
    <value>Agency</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>Get from the </value>
  </data>
  <data name="Place" xml:space="preserve">
    <value>place</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>place to the </value>
  </data>
  <data name="In_In_Value" xml:space="preserve">
    <value>II</value>
  </data>
  <data name="In_Out_Value" xml:space="preserve">
    <value>IO</value>
  </data>
  <data name="Out_In_Value" xml:space="preserve">
    <value>OI</value>
  </data>
  <data name="Out_Out_Value" xml:space="preserve">
    <value>OO</value>
  </data>
  <data name="sUnValid" xml:space="preserve">
    <value>Invalid</value>
  </data>
  <data name="sValid" xml:space="preserve">
    <value>Valid</value>
  </data>
  <data name="ApplicantClientDemand" xml:space="preserve">
    <value>Applicant-ClientDemand</value>
  </data>
  <data name="ClientApplicantDemand" xml:space="preserve">
    <value>Client-ApplicantDemand</value>
  </data>
  <data name="FromApplicantCode" xml:space="preserve">
    <value>From the applicant management.</value>
  </data>
  <data name="AboardAngecy" xml:space="preserve">
    <value>Aboard Angecy</value>
  </data>
  <data name="RelatedClient" xml:space="preserve">
    <value>Related Client</value>
  </data>
</root>